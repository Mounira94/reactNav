{"version":3,"sources":["Components/Contact.jsx","Components/Student.jsx","Components/Entrepreneurs.jsx","Components/Hobbyists.jsx","Components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Contact","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","class","phoneNumber","email","Component","Student","Entrepreneurs","Hobbyists","Main","Link","to","Route","exact","path","component","render","Components_Contact","App","BrowserRouter","Components_Main","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.849f2e62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render(props) {\r\n        return ( \r\n            <div className=\"component\">\r\n                <h1 class=\"component-tilte\">Contactez-nous</h1>\r\n                <p class=\"contact-text\">Téléphone Mobile:25648358</p>\r\n                <p class=\"contact-text\">Fax:{this.props.phoneNumber}</p>\r\n                <p class=\"contact-text\">E-mail:{this.props.email}</p>\r\n            </div>\r\n            \r\n         )\r\n    }\r\n}\r\nexport default Contact;","import React, { Component } from 'react';\r\nclass Student extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"component\">\r\n                <h1 class=\"component-tilte\">For Student</h1>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Student;","import React, { Component } from 'react';\r\nclass Entrepreneurs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"component\">\r\n                <h1 class=\"component-tilte\">For Entrepreneurs</h1>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Entrepreneurs;","import React, { Component } from 'react';\r\nclass Hobbyists extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"component\">\r\n                <h1 class=\"component-tilte\">For Hobbyists</h1>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Hobbyists;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport Contact from './Contact';\r\nimport Student from './Student';\r\nimport Entrepreneurs from './Entrepreneurs';\r\nimport Hobbyists from './Hobbyists';\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <main className=\"main\">\r\n            <nav className=\"nav-bar\">\r\n                <ul className=\"nav-menu\">\r\n                    <li className=\"nav-items \"><Link className=\"item\" to=\"/\">Home</Link></li>\r\n                    <li className=\"nav-items\">Services\r\n                        <ul className=\"departement-items\">\r\n                            <li className=\"departement-item\"><Link className=\"item\" to=\"/Student\">For students</Link></li>\r\n                            <li className=\"departement-item\"><Link className=\"item\" to=\"/Entrepreneurs\">For entrepreneurs</Link></li>\r\n                            <li className=\"departement-item\"><Link className=\"item\" to=\"/Hobbyists\">For hobbyists </Link></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"nav-items\"><Link className=\"item\" to=\"/Contact\">Contact </Link></li>\r\n                </ul>\r\n            </nav>\r\n            <div>\r\n                    <Route exact path=\"/Main\" component={Main} />\r\n                    <Route path=\"/Contact\" render={() => <Contact phoneNumber='25962593' email='mounirasgh@gmail.com' />} />\r\n                    <Route path=\"/Student\" component={Student} />\r\n                    <Route path=\"/Entrepreneurs\" component={Entrepreneurs} />\r\n                    <Route path=\"/Hobbyists\" component={Hobbyists} />\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport Main from './Components/Main';\nimport Contact from'./Components/Contact';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Main />\n        </BrowserRouter>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}